{
  "name": "passport-venmo",
  "version": "0.0.1",
  "description": "Venmo authentication strategy for Passport.",
  "keywords": [
    "passport",
    "venmo",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jihokoo/passport-venmo.git"
  },
  "bugs": {
    "url": "http://github.com/jihokoo/passport-venmo/issues"
  },
  "author": {
    "name": "Ji Ho Koo",
    "email": "jiho.koo@outlook.com",
    "url": "http://www.jihokoo.com/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "dependencies": {
    "passport-oauth2": "1.x.x"
  },
  "devDependencies": {
    "mocha": "1.x.x",
    "chai": "1.x.x",
    "chai-passport-strategy": "0.1.x"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "readmeFilename": "README.md",
  "homepage": "https://github.com/jihokoo/passport-venmo",
  "_id": "passport-venmo@0.0.1",
  "_from": "passport-venmo@latest",
  "readme": "# Passport-Venmo-OAuth\n\n[Passport](http://passportjs.org/) strategies for authenticating with [Venmo](http://www.venmo.com/)\nusing OAuth 2.0.\n\nThis module lets you authenticate using Venmo in your Node.js applications.\nBy plugging into Passport, Venmo authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-venmo\n\n\n## Usage of OAuth 2.0\n\n#### Configure Strategy\n\nThe Venmo OAuth 2.0 authentication strategy authenticates users using a Venmo\naccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a `clientID`, `clientSecret`, and `callbackURL`.\n\n    var VenmoStrategy = require('passport-venmo').Strategy;\n\n    passport.use(new VenmoStrategy({\n        clientID: Venmo_CLIENT_ID,\n        clientSecret: Venmo_CLIENT_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/venmo/callback\"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ VenmoId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'venmo'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/venmo',\n      passport.authenticate('venmo'));\n\n    app.get('/auth/venmo/callback',\n      passport.authenticate('venmo', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Scope\n\nBy default, upon making a `HTTP GET` request to:\napplication:\n    https://api.venmo.com/v1/me?access_token=token_goes_here\n\nVenmo will return a `JSON` response\n\nFor example:\n\n    {\n      \"data\":{\n        \"balance\": null,\n        \"user\":{\n           \"username\":\"delavara\",\n           \"first_name\":\"Cody\",\n           \"last_name\":\"De La Vara\",\n           \"display_name\":\"Cody De La Vara\",\n           \"is_friend\":false,\n           \"friends_count\":165,\n           \"about\":\"So happy!\",\n           \"email\":null,\n           \"phone\":null,\n           \"profile_picture_url\":\"https://venmopics.appspot.com/u/v3/s/6ecc7b37-5c4a-49df-b91e-3552f02dc397\",\n           \"id\":\"1088551785594880949\",\n           \"date_joined\":\"2013-02-10T21:58:05\"\n        }\n      }\n    };\n\nThe balance, email, and phone fields are 'null'. Venmo requires developers to specify that their applications require this informations in scopes.\n\nFor example:\n\n    app.get('/auth/venmo', passport.authenticate('venmo', {scope: ['access_balance', 'access_phone', 'access_email']}));\n\nIf you intend on making payments on a user's behalf, the `make_payments` scope must be specified as shown above. Scroll to the bottom of this [page](https://developer.venmo.com/docs/authentication) to see the full list of scopes.\n\n## Examples\n\n- For a complete, working example, refer to the [login and pay example](https://github.com/jihokoo/passport-venmo/tree/master/examples)\n- Example uses MongoDB, make sure you run mongod in the background\n\n\n## Credits\n\n  - [Ji Ho Koo](http://github.com/jihokoo)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2013-2014\n",
  "dist": {
    "shasum": "db61eda1e6491145f64247e38c8bee6449a97ae8"
  },
  "_resolved": "https://registry.npmjs.org/passport-venmo/-/passport-venmo-0.0.1.tgz"
}
